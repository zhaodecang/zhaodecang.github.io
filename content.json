[{"title":"博客系统搭建之路","date":"2017-01-15T15:39:10.744Z","path":"2017/01/15/article-title/","text":"搭建自己的简易博客系统很早就想搭建一个自己的博客系统记录平时所学的点点滴滴，今天得空看见郭神的一篇文章写的真心不错，故而班门弄斧搭了一个自己的博客，借此在自己的博客系统上分享搭建博客过程中的关键步骤和遇到的问题。 配置Node.js环境 下载Node.js安装文件： Windows Installer 32-bit https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi Windows Installer 64-bit https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi 安装并检查 安装过程纯粹就是“懒人式”安装，一路默认next 安装完成之后再命令行窗口输入： node -vnpm -v 如果输出版本信息说明安装成功，可以进行下一步了，如果不正确，则需要回头检查自己的安装过程。 配置Git环境 下载Git安装文件：https://git-scm.com/downloads 然后开始安装： 安装初始界面如下： 和 Node.js 一样，大部分设置都只需要保持默认，但是出于我们操作方便考虑，建议 PATH 选项按照下图选择： 剩余操作一路默认、next，安装完成之后打开命令行窗口，输入 git –version 如果结果如下图所示，则说明安装正确，可以进行下一步了，如果不正确，则需要回头检查自己的安装过程。 Github账号的注册和配置 Github注册（如果已有账号，请跳过此步……） 打开 Github 在下图的输入框中，分别输入自己的用户名、邮箱、密码: 然后前往自己刚才填写的邮箱，点开 Github 发送给你的注册确认信，确认注册，结束注册流程。一定要确认注册，否则无法使用gh-pages！ 创建代码库 登陆之后，点击页面右上角的加号，选择 New repository： 进入代码库创建页面，在 Repository name下填写 yourname.github.io，Description (optional) 下填写一些简单的描述（不写也没有关系）如图所示： 代码库设置 正确创建之后，你将会看到如下界面： 接下来开启点击界面右侧的 Settings，你将会打开这个库的 setting 页面，向下拖动，直到看见 GitHub Pages，如图： 如果你的配置没有问题，那么大约15分钟之后，yourname.github.io 这个网址就可以正常访问了~ 如果看到的界面没有 Your site is published at https://yourname.github.io/ 这行文字，说明之前创建仓库时没有生成README文件， 这时点击菜单栏左侧Code页签，点击底部的提示并创建一个README文件 安装Hexo在自己认为合适的地方创建一个文件夹，这里我以D：Program/hexo 为例，首先在D盘Program目录下创建Hexo文件夹，并在空白处右键选择 在此处打开命令行窗口 进入到该目录，然后在命令行输入： npm install hexo-cli -g 然后将会看到如下提示： 可能你会看到一个WARN，但是不用担心，这不会影响你的正常使用。 然后输入： npm install hexo --save 然后你会看到命令行窗口刷了一大堆白字，下面我们来看一看Hexo是不是已经安装好了。 在命令行中输入： hexo -v 如果你看到了如图文字，则说明已经安装成功了。 Hexo相关配置 初始化Hexo 接着上面的操作，输入： hexo init 然后输入： npm install 之后 npm 将会自动安装你需要的组件，只需要等待 npm 操作即可。 首次体验Hexo 继续操作，同样是在命令行中，输入： hexo g 然后输入： hexo s 然后会提示：INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop 在浏览器中打开 http://localhost:4000，你将会看到： 到目前为止，Hexo在本地的配置已经全都结束了。下面的步骤是将Github page与本地Hexo联系起来。 将Hexo与github page 联系起来 配置Git个人信息 如果你之前已经配置好git个人信息，请跳过这个步骤 检查是否已经有SSH Key cd C:\\Users\\Administrator.sshls 列出该文件下的文件，看是否存在 id_isa 和 id_isa.pub 文件，如果存在的话证明已经存在 SSH Key了，可以直接跳过生成密钥这一步骤，以下是存在的情况： 设置 Git 的 user name 和 email： git config –global user.name “zhaodecang”git config –global user.email “zhaodecang@qq.com” 生成密钥 ssh-keygen -t rsa -C “zhaodecang@qq.com” 连续两个回车(SSH Key会默认保存在C:\\Users\\Administrator.ssh目录下)，如果不需要密码则一路回车 添加密钥到ssh-agent 确保 ssh-agent 是可用的。ssh-agent是一种控制用来保存公钥身份验证所使用的私钥的程序，其实ssh-agent就是一个密钥管理器，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。 start the ssh-agent in the backgroundeval “$(ssh-agent -s)” 添加生成的 SSH key 到 ssh-agent ssh-add ~/.ssh/id_rsa 登录Github添加SSH 登录Github之后按如下步骤进入添加SSH的界面 然后点击右上角的NewSSHKey，把id_rsa.pub文件里的内容复制到Key里 测试SSH ssh -T git@github.com 你将会看到： Hi zhaodecang! You’ve successfully authenticated, but GitHub does not provide shell access. 如果看到Hi后面是你的用户名，就说明成功了 配置Deployment 在Hexo目录下的 _config.yml 文件中，找到 Deployment，然后按照如下修改： deploy:type: gitrepo: git@github.com:zhaodecang/zhaodecang1.github.io.gitbranch: master 写博客、发布文章 执行如下命令，新建一篇博客： hexo new post “article title” 这时候在Hexo目录 \\hexo\\source_posts 下将会看到 article title.md 文件，用MarkDown编辑器打开就可以编辑文章了。文章编辑好之后运行生成、部署命令： hexo g // 生成hexo d // 部署 当然也可以执行下面的命令，相当于上面两条命令的效果： hexo d -g #在部署前先生成 部署成功后访问你的地址 https://yourName.github.io将可以看到生成的文章 踩坑提醒 注意需要提前安装一个扩展： npm install hexo-deployer-git –save 如果出现下面这样的错误： permission denied (publickey).fatal:Could not read from remote repository.please make sure you hava the correct access rights and the repository exists. 则是因为没有设置好public key所致，可以重新查看上面配置Git和Deployment部分 另外推荐一篇博客 http://blog.csdn.net/gdutxiaoxu/article/details/53573399 添加404页面 GitHub Pages有提供制作404页面的指引： Custom 404 Pageshttps://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site 直接在根目录下创建自己的 404.html 或者 404.md 就可以。但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用 hexo server 在本机调试也是不起作用的。 推荐使用，腾讯公益404： http://www.qq.com/404 我的404页面配置如下： 参考 Hexo主页 https://hexo.io 史上最详细的Hexo博客搭建图文教程 https://xuanwo.org/2015/03/26/hexo-intor","tags":[]},{"title":"Hello World","date":"2017-01-15T15:18:45.066Z","path":"2017/01/15/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]